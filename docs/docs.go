// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/orders": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a paginated list of all orders with buyer details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Orders"
                ],
                "summary": "Admin View Orders",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by order status (e.g., pending, completed, cancelled)",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated list of all orders with details",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.PaginatedAdminOrdersResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/orders/{id}/status": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Admin can update the status of an order (accept, reject, ontheway, finish)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Orders"
                ],
                "summary": "Update Order Status",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New order status (accept, reject, ontheway, finish)",
                        "name": "status",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order status updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "order_id": {
                                                    "type": "integer"
                                                },
                                                "status": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request: Invalid status or order not found",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/product": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Admin adds a new product",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Product"
                ],
                "summary": "Add a product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product Name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Product Price",
                        "name": "price",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Product Stock",
                        "name": "stock",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Product Category",
                        "name": "category_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Product Image",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Product",
                        "schema": {
                            "$ref": "#/definitions/helper.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Validation Error",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Access forbidden",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/product/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a detail of products with seller",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Product"
                ],
                "summary": "Get Product Detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of products with seller details",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.GetProductResponseComplete"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Admin edit a product",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Product"
                ],
                "summary": "Edit a product",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Product Name",
                        "name": "name",
                        "in": "formData"
                    },
                    {
                        "type": "number",
                        "description": "Product Price",
                        "name": "price",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "description": "Product Stock",
                        "name": "stock",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "description": "Product Category",
                        "name": "category_id",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Product Image",
                        "name": "image",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product",
                        "schema": {
                            "$ref": "#/definitions/helper.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Validation Error",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Access forbidden",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Admin delete a product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Product"
                ],
                "summary": "Delete a product",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product",
                        "schema": {
                            "$ref": "#/definitions/helper.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Validation Error",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Access forbidden",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/products": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a paginated list of products with seller details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Product"
                ],
                "summary": "Get Products",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page (default: 25)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "id of seller (default: 1)",
                        "name": "seller_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Name of seller (default: Deketna)",
                        "name": "seller_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Name of product (default: botol)",
                        "name": "product_name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of products with seller details",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.PaginationResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/admin.GetProductResponseComplete"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/signin": {
            "post": {
                "description": "Authenticates as admin  with email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Auth"
                ],
                "summary": "Sign in a admin",
                "parameters": [
                    {
                        "description": "Admin sign-in data",
                        "name": "admin",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.SignInRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/admin.SignInResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/admin.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/admin.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/cart": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve all cart items for the logged-in user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "summary": "Get Cart Items",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page (default: 25)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of cart items",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.PaginationResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/user.CartItemResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve cart items",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update the quantity of a specific cart item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "summary": "Update Cart Item",
                "parameters": [
                    {
                        "description": "Cart item details",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UpdateCartRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cart item updated successfully",
                        "schema": {
                            "$ref": "#/definitions/helper.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to update cart item",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a product with a specific quantity to the buyer's cart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "summary": "Add Product to Cart",
                "parameters": [
                    {
                        "description": "Product ID and Quantity",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.AddToCartRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product added to cart successfully",
                        "schema": {
                            "$ref": "#/definitions/helper.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete one or more items from the user's cart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "summary": "Delete Cart Items",
                "parameters": [
                    {
                        "description": "Cart Item IDs to delete",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.DeleteCartRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cart items deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/helper.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to delete cart items",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/order": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new order with selected products, validate stock, deduct quantities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Orders"
                ],
                "summary": "Place Order",
                "parameters": [
                    {
                        "description": "List of products and quantities",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/user.OrderItemRequest"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order placed successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "order_id": {
                                                    "type": "integer"
                                                },
                                                "total_amount": {
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Validation Error",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/order/{order_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve details of a specific order, accessible only to the order's buyer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Orders"
                ],
                "summary": "Get Order Items Detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "order_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order details fetched successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/user.OrderDetailWithItemsResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid order ID",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to fetch order details",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/orders": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a list of orders placed by the authenticated buyer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Orders"
                ],
                "summary": "View Orders",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of products with seller details",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.PaginationResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/user.OrderResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/product/{id}": {
            "get": {
                "description": "Retrieve details of a specific product with seller information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Get Product Detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product details with seller information",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/user.ProductWithSeller"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid Product ID",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/products": {
            "get": {
                "description": "Retrieve a paginated list of products with seller details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Get Products",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page (default: 25)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of products with seller details",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.PaginationResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/user.ProductWithSeller"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/profile": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve the profile of the currently authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Profile"
                ],
                "summary": "Get User Profile",
                "responses": {
                    "200": {
                        "description": "Profile retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/user.ProfileResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update the profile details of the currently authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Profile"
                ],
                "summary": "Edit User Profile",
                "parameters": [
                    {
                        "description": "Profile data to update",
                        "name": "profile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.EditProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/user.EditProfileResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Validation Error",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Register a new user with email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Auth"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User registration data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User Created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/user.SignInResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request: Invalid input/Email is already registered",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/signin": {
            "post": {
                "description": "Authenticates a user with email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Auth"
                ],
                "summary": "Sign in a user (buyer)",
                "parameters": [
                    {
                        "description": "User sign-in data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.SignInRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User Login successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/user.SignInResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request: Invalid input",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helper.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "admin.AdminOrderResponse": {
            "type": "object",
            "properties": {
                "buyer": {
                    "$ref": "#/definitions/admin.OrderBuyerResponse"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/admin.OrderItemResponse"
                    }
                },
                "order_id": {
                    "type": "integer",
                    "example": 1
                },
                "status": {
                    "type": "string",
                    "example": "completed"
                },
                "total_amount": {
                    "type": "number",
                    "example": 75.5
                }
            }
        },
        "admin.Category": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "admin.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Invalid input"
                }
            }
        },
        "admin.GetProductResponseComplete": {
            "type": "object",
            "properties": {
                "category": {
                    "$ref": "#/definitions/admin.Category"
                },
                "category_id": {
                    "type": "integer"
                },
                "created_at": {
                    "description": "Changed to string",
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "image_url": {
                    "description": "URL or path to the image",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "seller": {
                    "$ref": "#/definitions/admin.Profile"
                },
                "seller_id": {
                    "type": "integer"
                },
                "stock": {
                    "type": "integer"
                },
                "updated_at": {
                    "description": "Changed to string",
                    "type": "string"
                }
            }
        },
        "admin.OrderBuyerResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "buyer@example.com"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "phone": {
                    "type": "string",
                    "example": "123456789"
                }
            }
        },
        "admin.OrderItemResponse": {
            "type": "object",
            "properties": {
                "price": {
                    "type": "number",
                    "example": 25
                },
                "product_name": {
                    "type": "string",
                    "example": "Product A"
                },
                "quantity": {
                    "type": "integer",
                    "example": 2
                }
            }
        },
        "admin.PaginatedAdminOrdersResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/admin.AdminOrderResponse"
                    }
                },
                "isNext": {
                    "type": "boolean",
                    "example": true
                },
                "isPrev": {
                    "type": "boolean",
                    "example": false
                },
                "limit": {
                    "type": "integer",
                    "example": 10
                },
                "page": {
                    "type": "integer",
                    "example": 1
                },
                "totalItem": {
                    "type": "integer",
                    "example": 50
                }
            }
        },
        "admin.Profile": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "admin.SignInRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "password": {
                    "type": "string",
                    "minLength": 6,
                    "example": "password123"
                }
            }
        },
        "admin.SignInResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "your_jwt_token"
                }
            }
        },
        "helper.ErrorDetail": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "HTTP status code",
                    "type": "integer"
                },
                "message": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "helper.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "description": "Error details",
                    "allOf": [
                        {
                            "$ref": "#/definitions/helper.ErrorDetail"
                        }
                    ]
                }
            }
        },
        "helper.PaginationMetadata": {
            "type": "object",
            "properties": {
                "isNext": {
                    "type": "boolean"
                },
                "isPrev": {
                    "type": "boolean"
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "totalItems": {
                    "type": "integer"
                },
                "totalPages": {
                    "type": "integer"
                }
            }
        },
        "helper.PaginationResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "pagination": {
                    "$ref": "#/definitions/helper.PaginationMetadata"
                }
            }
        },
        "helper.SuccessResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Response data (optional)"
                },
                "message": {
                    "description": "Description of the operation",
                    "type": "string"
                }
            }
        },
        "user.AddToCartRequest": {
            "type": "object",
            "required": [
                "product_id",
                "quantity"
            ],
            "properties": {
                "product_id": {
                    "description": "ID of the product",
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "user.CartItemResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "product_id": {
                    "type": "integer"
                },
                "product_name": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                },
                "total_price": {
                    "type": "number"
                }
            }
        },
        "user.CreateUserRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "password": {
                    "type": "string",
                    "minLength": 6,
                    "example": "password123"
                }
            }
        },
        "user.DeleteCartRequest": {
            "type": "object",
            "properties": {
                "cart_item_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "user.EditProfileRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "maxLength": 255
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "maxLength": 255
                }
            }
        },
        "user.EditProfileResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "user.OrderDetailWithItemsResponse": {
            "type": "object",
            "properties": {
                "buyer_name": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "order_id": {
                    "type": "integer"
                },
                "order_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/user.OrderItemDetailResponse"
                    }
                },
                "status": {
                    "type": "string"
                },
                "total_amount": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "user.OrderItemDetailResponse": {
            "type": "object",
            "properties": {
                "image_url": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "product_name": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                },
                "total_price": {
                    "type": "number"
                }
            }
        },
        "user.OrderItemRequest": {
            "type": "object",
            "required": [
                "product_id",
                "quantity"
            ],
            "properties": {
                "product_id": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "user.OrderResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "Changed to string",
                    "type": "string"
                },
                "order_id": {
                    "type": "integer",
                    "example": 1
                },
                "status": {
                    "type": "string",
                    "example": "completed"
                },
                "total_amount": {
                    "type": "number",
                    "example": 75.5
                },
                "updated_at": {
                    "description": "Changed to string",
                    "type": "string"
                }
            }
        },
        "user.ProductWithSeller": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "seller_id": {
                    "type": "integer"
                },
                "seller_name": {
                    "description": "Omitempty for null values",
                    "type": "string"
                },
                "stock": {
                    "type": "integer"
                }
            }
        },
        "user.ProfileResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/user.UserResponse"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "user.SignInRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user1@example.com"
                },
                "password": {
                    "type": "string",
                    "minLength": 6,
                    "example": "password123"
                }
            }
        },
        "user.SignInResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "your_jwt_token"
                }
            }
        },
        "user.UpdateCartRequest": {
            "type": "object",
            "properties": {
                "cart_item_id": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "user.UserResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "phone": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Enter \"Bearer \u003ctoken\u003e\" (e.g., \"Bearer abc123\") as the value.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Deketna API",
	Description:      "API for Deketna business application",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
